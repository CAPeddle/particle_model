@startuml
title Class Diagram

abstract class Influencer
{
    {abstract} +GetState()
    +virtual ~Interface()
    +virtual void method1()    
                                   
    +virtual void method2()
}

Influencer <|.. Object

class Object {
	- influencers: Influencer[0..*]

  +GetState()
	+ProcessInfluencers()
	+ProcessCombinedState()
	
}


abstract class Observable

Observable <|.. ConcreteObservable


abstract class Observable{
 -observers: ObserverBase[0..*]

 +Register(Observer o)
 +Deregister(Observer o)
 +Notify()
}

class ConcreteObservable


interface ObserverBase


@enduml
